variables:
  IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  DOCKER_RUNNER_VERSION: 19.03.5
  DOCKER_VERSION: 19.03.5
  DOCKER_TLS_CERTDIR: /certs
  TRIVY_VERSION: 0.4.2
  DOCKER_BUILDX_VERSION: 0.3.1
  DOCKER_AWS_ECR_CREDENTIAL_HELPER_VERSION: 0.4.0

stages:
  - lint
  - build
  - test
  - deploy

lint-shellcheck:
  image: koalaman/shellcheck-alpine:stable
  stage: lint
  script: shellcheck scripts/*.sh

build-docker-image:
  image: docker:$DOCKER_RUNNER_VERSION
  stage: build
  variables:
    DOCKER_BUILDKIT: "1"
  services:
    - docker:$DOCKER_RUNNER_VERSION-dind
  before_script:
    - docker info
    - ./scripts/gitlab-docker-registry-login.sh
  script:
    - >-
        docker build --pull --build-arg "DOCKER_VERSION=$DOCKER_VERSION"
        --build-arg "DOCKER_BUILDX_VERSION=$DOCKER_BUILDX_VERSION"
        --build-arg "DOCKER_AWS_ECR_CREDENTIAL_HELPER_VERSION=$DOCKER_AWS_ECR_CREDENTIAL_HELPER_VERSION"
        --tag "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"

test-build-self:
  image: $CI_REGISTRY_IMAGE:$IMAGE_TAG
  stage: test
  variables:
    DOCKER_BUILDX_CONTEXT_CREATE: "1"
    DOCKER_BUILDX_BUILDER_CREATE: "1"
  services:
    - docker:$DOCKER_RUNNER_VERSION-dind
  before_script:
    - docker-use-buildx
    - gitlab-docker-registry-login
  script:
    - docker build . -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG-self" --load
    - docker image ls

test-scan-trivy:
  image:
    name: aquasec/trivy:$TRIVY_VERSION
    entrypoint: [""]
  stage: test
  cache:
    paths:
      - $CI_PROJECT_DIR/.trivycache/
  variables:
    TRIVY_AUTH_URL: $CI_REGISTRY
    TRIVY_USERNAME: $CI_REGISTRY_USER
    TRIVY_PASSWORD: $CI_REGISTRY_PASSWORD
    TRIVY_CACHE_DIR: $CI_PROJECT_DIR/.trivycache/
  allow_failure: true
  script:
    - trivy -no-progress "$CI_REGISTRY_IMAGE:$IMAGE_TAG"

deploy-docker-image:
  image: docker:$DOCKER_RUNNER_VERSION
  stage: deploy
  only:
    - master
  services:
    - docker:$DOCKER_RUNNER_VERSION-dind
  before_script:
    - ./scripts/gitlab-docker-registry-login.sh
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - docker tag "$CI_REGISTRY_IMAGE:$IMAGE_TAG" "$CI_REGISTRY_IMAGE:$DOCKER_VERSION"
    - docker tag "$CI_REGISTRY_IMAGE:$IMAGE_TAG" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:$DOCKER_VERSION"
    - docker push "$CI_REGISTRY_IMAGE:latest"
