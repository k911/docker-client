#!/bin/sh

DOCKER_CONFIG_FILE="${DOCKER_CONFIG:-"$HOME/.docker"}/config.json"
if [ ! -f "$DOCKER_CONFIG_FILE" ]; then
    echo '{}' > "$DOCKER_CONFIG_FILE"
fi

JSON_TEMPLATE="{ \"credsStore\": \"pass\" }"
DOCKER_CONFIG="$(cat "$DOCKER_CONFIG_FILE")"
echo "$JSON_TEMPLATE" | jq -s ".[0] * $DOCKER_CONFIG" > "$DOCKER_CONFIG_FILE"

GPG_NAME_REAL="${GPG_NAME_REAL:-"Pass Docker Client"}"
GPG_NAME_COMMENT="${GPG_NAME_REAL:-"Autogenerated by docker-use-pass script"}"
GPG_NAME_EMAIL="${GPG_NAME_EMAIL:-"pass@docker.client"}"
GPG_PASSPHRASE="${GPG_PASSPHRASE:-""}"

if [ "$GPG_PASSPHRASE" = "" ]; then
    # Generate GPG key with no password
    echo "
%no-protection
Key-Type: 1
Key-Length: 2048
Subkey-Type: 1
Subkey-Length: 2048
Name-Real: $GPG_NAME_REAL
Name-Email: $GPG_NAME_EMAIL
Name-Comment: $GPG_NAME_COMMENT
Expire-Date: 0
" > gen-gpg-key-script
    gpg --batch --gen-key gen-gpg-key-script
    rm gen-gpg-key-script
else
    # Generate GPG key with password
    echo "
Key-Type: 1
Key-Length: 2048
Subkey-Type: 1
Subkey-Length: 2048
Name-Real: $GPG_NAME_REAL
Name-Email: $GPG_NAME_EMAIL
Name-Comment: $GPG_NAME_COMMENT
Expire-Date: 0
Passphrase: $GPG_PASSPHRASE
" > gen-gpg-key-script
    gpg --batch --gen-key gen-gpg-key-script
    rm gen-gpg-key-script
fi

pass init "$GPG_NAME_EMAIL"
